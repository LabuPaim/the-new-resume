generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  login     String
  email     String      @unique
  password  String
  role      Role
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  candidato Candidato[]
  empresa   Empresa[]
}

enum Role {
  CANDIDATO
  EMPRESA
}

model Candidato {
  id          String        @id @unique
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  nome        String
  nascimento  DateTime
  cpf         String        @unique
  celular     String        @unique
  cidade      String
  estado      String
  descricao   String?
  stack       Stack[]
  nivel       Nivel
  habilidades Habilidades[]
  contratos   Contratos[]
  office      Office[]
  deficiencia Boolean
  vaga        Vaga[]
  links       Links[]
  experiencia Experiencia[]
  formacao    Formacao[]
}

model Empresa {
  id        String  @id @unique
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  nome      String
  cnpj      String  @unique
  telefone  String  @unique
  descricao String?
  cidade    String
  estado    String
  vaga      Vaga[]
  links     Links[]
}

model Vaga {
  id          String        @id @unique
  userId      String
  user        Empresa       @relation(fields: [userId], references: [id])
  candidato   Candidato[]
  stack       Stack
  nivel       Nivel
  descricao   String?
  formacao    String[]
  habilidades Habilidades[]
  experiencia String[]
  contratos   Contratos
  office      Office
  deficiencia Bool
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Links {
  id          String    @id @unique
  candidato   Candidato @relation(fields: [candidatoId], references: [id])
  empresa     Empresa   @relation(fields: [empresaId], references: [id])
  candidatoId String
  empresaId   String
  github      String?
  linkedin    String?
  instagram   String?
  site        String?
}

model Experiencia {
  id          String        @id @unique
  candidato   Candidato     @relation(fields: [candidatoId], references: [id])
  candidatoId String
  empresa     String?
  cargo       String?
  descricao   String?
  habilidades Habilidades[]
  dataInicio  DateTime
  dataFinal   DateTime?
  atualmente  Boolean
}

model Formacao {
  id          String    @id @unique
  candidato   Candidato @relation(fields: [candidatoId], references: [id])
  candidatoId String
  instituicao String
  nivel       String
  curso       String
  situacao    String
  dataInicio  DateTime
  dataFinal   DateTime?
  atualmente  Boolean
}

enum Bool {
  SIM
  NAO
  TANTOFAZ
}

enum Stack {
  FULLSTACK
  FRONTEND
  BACKEND
}

enum Nivel {
  JUNIOR
  PLENO
  SENIOR
}

enum Contratos {
  PJ
  CLT
}

enum Office {
  PRESENCIAL
  HIBRIDO
  HOMEOFFICE
}

enum Habilidades {
  ANDROIDSTUDIO
  ANGULAR
  API
  APIREST
  APIRESTFULL
  BASH
  CLEANCODE
  CSS
  DART
  DESIGNPATTERN
  EXPRESS
  FIGMA
  FIREBASE
  GIT
  GITHUB
  GRAPHQL
  HTML
  JAVA
  JAVASCRIPT
  JSON
  KANBAN
  MONGODB
  MVC
  NESTJS
  NEXTJS
  NODEJS
  NOSQL
  PHP
  POSTGRESQL
  PYTHON
  REACTJS
  REDUX
  SASS
  SCRUM
  SCSS
  SEO
  SOLID
  SQL
  STYLEDCOMPONENTS
  TYPESCRIPT
  VUE
}
